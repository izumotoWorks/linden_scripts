//=============================================================================
// HUD de Alpha変更 レシーバー用スクリプト v0.1.0
// ----------------------------------------------------------------------------
// (C)2021 NullReferenceException
// This software is released under the MIT License.
// http://opensource.org/licenses/mit-license.php
// ----------------------------------------------------------------------------
// Version
// 0.1.0 2021/05/19 β版
// ----------------------------------------------------------------------------
// [GitHub] : https://github.com/izumotoWorks/linden_scripts
//=============================================================================

//------------------------------------------------------------
// 動作切り替え用フラグ
//------------------------------------------------------------
integer change_type = -1;

// 【単体プリムの場合】
// change_typeの値を0にしておくとスクリプトを付けたプリムのみに透明度を反映する。
// 
// 【複合プリムの場合】
// オブジェクトが複数のプリムで構成されてる場合上記の設定だと単体しか透明にならないので
// 「-1」の値にするとリンクされてるすべてのプリムに対して透明度を適用する
//
// ※ いずれもスクリプトがアタッチできるオブジェクトに限る
// 複数別々に透明度を変更したい場合はスクリプトをアタッチする際に
// チャンネルを変更する必要がある。
// 
// 実装方法がわからないときは作者まで連絡どうぞ。


//------------------------------------------------------------
// 定数定義　
//------------------------------------------------------------
integer LISTEN_CHANNEL = -114514; // 通信するチャネル
integer IS_LINKS = -1; // リンクプリムかの条件
float C_OUTOF_RANGE = -1.000000; // 範囲外のときの値
float C_BAD_FLOAT_CAST = 0.000000; // floatキャストが出来ないときの値


//------------------------------------------------------------
// 変数定義　
//------------------------------------------------------------
key obj_uuid; // UUID用
string obj_name; // 名前用
integer alpha_change_flag; // アルファチェンジフラグ

integer listen_handle; // リッスンハンドラ

//------------------------------------------------------------
// 関数群
//------------------------------------------------------------
 
default
{
    // アタッチ時に動作
    state_entry()
    {   
        obj_uuid = NULL_KEY; //llGetOwner(); // 装着物のUUIDを指定すると動作しないのでオーナーのUUIDにしている
        obj_name = ""; //llGetObjectName(); // 負荷が高く感じた場合名前の指定もする(現在未使用)
        alpha_change_flag = -1; // チェンジフラグを折っておく

        // 指定チャネル + 指定名で　指定UUIDのプリムに対してリッスンする
        listen_handle = llListen(LISTEN_CHANNEL, obj_name, obj_uuid, "");
    }
    
    // チャネルに受信したら動作
    listen( integer channel, string name, key id, string message )
    {
        // 透明度用変数
        float _alpha = 1.0;
        if(message == "0.0") {
            // 直接0.0文字列がきたら透明にする
            _alpha = 0.0;
            // アルファチェンジフラグを建てる
            alpha_change_flag = 1;
        } else if((float)message == C_BAD_FLOAT_CAST) {
            // float型以外をfloatキャストすると0.000000になるのでその際は何もしない
            alpha_change_flag = -1;
        } else {
            // float型だった場合飛んできた値をアルファ値にする
            if((float)message == C_OUTOF_RANGE) {
                // マイナスが飛んできたら透明にする
                _alpha = 0.0;
            } else {
                // それ以外は飛んできた値にする
                _alpha = (float)message;
            }
            // アルファチェンジフラグを建てる
            alpha_change_flag = 1;
        }

        // アルファチェンジフラグが立ってたらアルファ値を変更
        if(alpha_change_flag == 1) {
            // このスクリプトをアタッチしてるオブジェクトにアルファ値を適用する 0.0 => 透明 1.0 => 不透明
            if(change_type != IS_LINKS) {
                llSetAlpha(_alpha, ALL_SIDES); // 単体オブジェクトの透明度を変更する
            } else {
                llSetLinkAlpha(-1, _alpha, ALL_SIDES); // リンクしてる全てのオブジェクトの透明度を変更する
            }
            // 処理が終わったら折っておく
            alpha_change_flag = -1;
        }
    }
}